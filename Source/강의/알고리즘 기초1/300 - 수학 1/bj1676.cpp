#include <stdio.h>

int main()
{
	// 문제는 n!의 뒤에 0이 몇개가 연속으로 붙어있는지 갯수를 반환하면 되는 문제인데 
	// 뒤에 0이 몇 개가 붙어있는지는 10이 몇 번 곱해졌는지를 구하면 된다. 
	// 10은 2 * 5이므로 n!에서 2의 약수 갯수와 5의 약수 갯수의 최대공약수가 답이 된다. 
	// 하지만 현실적으로 500까지나 되는 팩토리얼을 구할 수는 없으므로 곱해지는 수에서 2와 5의 약수의 갯수를 구하면 된다.
	// 하지만 1~10까지만으로 생각해도 2의 약수는 2(1), 4(2), 6(1), 8(3), 10(1)로 8개나 되지만 5의 약수는 5, 10 2개 밖에 안 된다.
	// 그리고 숫자는 연속되게 곱하므로 2의 약수는 무조건 5의 약수보다 갯수가 많으므로 5의 약수의 갯수만 알면 된다.

	int n; scanf("%d", &n);
	int count = 0;
	for (int i = 1; i <= n; i++)
	{
		if (i % 5 == 0)
		{
			int temp = i;
			while (temp % 5 == 0)
			{
				count++;
				temp /= 5;

			}
		}
	}

	printf("%d\n\n", count);



	return 0;

}
